# Анализ древовидной переписки из JSON API
# Условия
#     Вам предоставлен доступ к API, который возвращает данные в формате JSON. Данные представляют собой древовидную структуру переписки между участниками.
#     Доступ к API.
#     Анализ данных:
#         Пройдитесь по древовидной структуре переписки.
#         Подсчитайте, сколько сообщений отправил каждый участник.
#         Участника необходимо определить по полю "username", поле  "user_id" не имеет отношения к решению данной задачи.
# Задача
#     Написать скрипт на Python, который выполнит GET-запрос к данному API для получения JSON-данных.
#     Преобразовать полученный JSON-ответ в Python-объект с использованием метода response.json().
#     Проанализировать древовидную структуру переписки и подсчитать количество сообщений, отправленных каждым участником.
#     Вставить полученный словарь в поле для ответа.
# {'Anastasia': *, 'Vladimir': *, 'Yulia': *, 'Maria': *, 'Kirill': *, 'Anton': *, 'Petr': *, 'Dmitry': *, 'Olga': *, 'Maxim': *, 'Elena': *, 'Alex': *, 'Natalia': *, 'Tatiana': *, 'Svetlana': *, 'Andrey': *, 'Sergey': *, 'Oksana': *, 'Ivan': *, 'Irina': *}
# Сортировка:
#     Необходимо упорядочить данный словарь сначала по убыванию числа сообщений. То есть участник с наибольшим количеством сообщений должен идти первым, а с наименьшим — последним.
#     В случае равенства числа сообщений между участниками, необходимо применить дополнительный критерий сортировки. Этот критерий основан на лексикографическом порядке имен участников. Лексикографическая сортировка схожа с алфавитной: если, например, имена 'Алексей' и 'Анна' имеют одинаковое количество сообщений, то 'Алексей' будет расположен перед 'Анной', так как лексикографически он идет раньше. Таким образом, участники с одинаковым числом сообщений будут упорядочены в словаре в зависимости от их имён, начиная с самого раннего и заканчивая самым поздним.
#     Пример ниже не является корректным для системы проверки:
#     {'Vladimir': 21, 'Yulia': 21, 'Anton': 14, 'Kirill': 14, 'Petr': 14, 'Dmitry': 8, 'Elena': 8, 'Maxim': 8, 'Olga': 8, 'Alex': 6, 'Natalia': 6, 'Svetlana': 6, 'Tatiana': 6, 'Oksana': 5, 'Sergey': 5}
#     В примере выше:
#         У 'Vladimir' и 'Yulia' одинаковое количество сообщений —21. В лексикографическом порядке "Vladimir" идет раньше "Yulia", поэтому он идет первым.
#         'Anton', 'Kirill', и 'Petr' имеют по 14 сообщений. В лексикографическом порядке имена располагаются так: 'Anton', 'Kirill', 'Petr'.
#         и т.д

